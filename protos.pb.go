// Code generated by protoc-gen-go.
// source: protos.proto
// DO NOT EDIT!

/*
Package gam is a generated protocol buffer package.

It is generated from these files:
	protos.proto

It has these top-level messages:
	PID
	MessageEnvelope
	Restarting
	Stopping
	Stopped
	PoisonPill
	Started
*/
package gam

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type PID struct {
	Node string `protobuf:"bytes,1,opt,name=Node,json=node" json:"Node,omitempty"`
	Host string `protobuf:"bytes,2,opt,name=Host,json=host" json:"Host,omitempty"`
	Id   uint64 `protobuf:"varint,3,opt,name=Id,json=id" json:"Id,omitempty"`
}

func (m *PID) Reset()                    { *m = PID{} }
func (m *PID) String() string            { return proto.CompactTextString(m) }
func (*PID) ProtoMessage()               {}
func (*PID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type MessageEnvelope struct {
	// Name of the message type.  Must be defined by one of the files in
	// proto_files.
	TypeName string `protobuf:"bytes,1,opt,name=type_name,json=typeName" json:"type_name,omitempty"`
	// The message data.
	MessageData []byte `protobuf:"bytes,2,opt,name=message_data,json=messageData,proto3" json:"message_data,omitempty"`
}

func (m *MessageEnvelope) Reset()                    { *m = MessageEnvelope{} }
func (m *MessageEnvelope) String() string            { return proto.CompactTextString(m) }
func (*MessageEnvelope) ProtoMessage()               {}
func (*MessageEnvelope) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// user messages
type Restarting struct {
}

func (m *Restarting) Reset()                    { *m = Restarting{} }
func (m *Restarting) String() string            { return proto.CompactTextString(m) }
func (*Restarting) ProtoMessage()               {}
func (*Restarting) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Stopping struct {
}

func (m *Stopping) Reset()                    { *m = Stopping{} }
func (m *Stopping) String() string            { return proto.CompactTextString(m) }
func (*Stopping) ProtoMessage()               {}
func (*Stopping) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Stopped struct {
}

func (m *Stopped) Reset()                    { *m = Stopped{} }
func (m *Stopped) String() string            { return proto.CompactTextString(m) }
func (*Stopped) ProtoMessage()               {}
func (*Stopped) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type PoisonPill struct {
}

func (m *PoisonPill) Reset()                    { *m = PoisonPill{} }
func (m *PoisonPill) String() string            { return proto.CompactTextString(m) }
func (*PoisonPill) ProtoMessage()               {}
func (*PoisonPill) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type Started struct {
}

func (m *Started) Reset()                    { *m = Started{} }
func (m *Started) String() string            { return proto.CompactTextString(m) }
func (*Started) ProtoMessage()               {}
func (*Started) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func init() {
	proto.RegisterType((*PID)(nil), "gam.PID")
	proto.RegisterType((*MessageEnvelope)(nil), "gam.MessageEnvelope")
	proto.RegisterType((*Restarting)(nil), "gam.Restarting")
	proto.RegisterType((*Stopping)(nil), "gam.Stopping")
	proto.RegisterType((*Stopped)(nil), "gam.Stopped")
	proto.RegisterType((*PoisonPill)(nil), "gam.PoisonPill")
	proto.RegisterType((*Started)(nil), "gam.Started")
}

var fileDescriptor0 = []byte{
	// 202 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x34, 0x8f, 0x4d, 0x4b, 0xc4, 0x30,
	0x10, 0x86, 0xe9, 0x07, 0xda, 0x8e, 0x41, 0x21, 0xa7, 0x82, 0x17, 0xcd, 0xc9, 0x93, 0x17, 0xcf,
	0xde, 0x2a, 0xd8, 0x83, 0xa5, 0xc6, 0x1f, 0x50, 0x22, 0x19, 0x6a, 0xa0, 0xcd, 0x84, 0x26, 0x08,
	0xfb, 0xef, 0x37, 0x49, 0x77, 0x4f, 0x79, 0xf2, 0xcc, 0x3b, 0x2f, 0x0c, 0x30, 0xb7, 0x53, 0x20,
	0xff, 0x9a, 0x1f, 0x5e, 0x2d, 0x6a, 0x13, 0xef, 0x50, 0x4d, 0x43, 0xcf, 0x39, 0xd4, 0x23, 0x69,
	0xec, 0x8a, 0xa7, 0xe2, 0xa5, 0x95, 0xb5, 0x8d, 0x9c, 0xdc, 0x27, 0xf9, 0xd0, 0x95, 0x87, 0xfb,
	0x8b, 0xcc, 0xef, 0xa1, 0x1c, 0x74, 0x57, 0x45, 0x53, 0xcb, 0xd2, 0x68, 0xf1, 0x0d, 0x0f, 0x5f,
	0xe8, 0xbd, 0x5a, 0xf0, 0xc3, 0xfe, 0xe3, 0x4a, 0x0e, 0xf9, 0x23, 0xb4, 0xe1, 0xe4, 0x70, 0xb6,
	0x6a, 0xbb, 0xf6, 0x35, 0x49, 0x8c, 0xf1, 0xcf, 0x9f, 0x81, 0x6d, 0x47, 0x7e, 0xd6, 0x2a, 0xa8,
	0xdc, 0xcd, 0xe4, 0xdd, 0xc5, 0xf5, 0x51, 0x09, 0x06, 0x20, 0xd1, 0x07, 0xb5, 0x07, 0x63, 0x17,
	0x01, 0xd0, 0xfc, 0x04, 0x72, 0x2e, 0x71, 0x0b, 0xb7, 0x99, 0x51, 0xa7, 0xd0, 0x44, 0xc6, 0x93,
	0x9d, 0xcc, 0xba, 0x1e, 0x83, 0xb8, 0x80, 0xfa, 0xf7, 0x26, 0xdf, 0xf6, 0x76, 0x0e, 0x00, 0x00,
	0xff, 0xff, 0x81, 0x1f, 0xbd, 0x08, 0xeb, 0x00, 0x00, 0x00,
}
